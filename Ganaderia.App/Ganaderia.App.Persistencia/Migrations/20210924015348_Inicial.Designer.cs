// <auto-generated />
using System;
using Ganaderia.App.Persistencia;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Ganaderia.App.Persistencia.Migrations
{
    [DbContext(typeof(AppContext))]
    [Migration("20210924015348_Inicial")]
    partial class Inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Ganaderia.App.Dominio.Ejemplar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Especie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GanaderoId")
                        .HasColumnType("int");

                    b.Property<int?>("HistoriaClinicaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GanaderoId");

                    b.HasIndex("HistoriaClinicaId");

                    b.ToTable("Ejemplares");
                });

            modelBuilder.Entity("Ganaderia.App.Dominio.Fecha", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Año")
                        .HasColumnType("int");

                    b.Property<int>("Dia")
                        .HasColumnType("int");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Mes")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Fechas");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Fecha");
                });

            modelBuilder.Entity("Ganaderia.App.Dominio.Persona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Cedula")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contraseña")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroTelefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Personas");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Persona");
                });

            modelBuilder.Entity("Ganaderia.App.Dominio.Vacuna", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Codigo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EjemplarId")
                        .HasColumnType("int");

                    b.Property<int?>("FechaId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EjemplarId");

                    b.HasIndex("FechaId");

                    b.ToTable("Vacunas");
                });

            modelBuilder.Entity("Ganaderia.App.Dominio.HistoriaClinica", b =>
                {
                    b.HasBaseType("Ganaderia.App.Dominio.Fecha");

                    b.Property<string>("Consejos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FechaId")
                        .HasColumnType("int");

                    b.Property<string>("InformeVeterinario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Patologias")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Peso")
                        .HasColumnType("real");

                    b.HasIndex("FechaId");

                    b.HasDiscriminator().HasValue("HistoriaClinica");
                });

            modelBuilder.Entity("Ganaderia.App.Dominio.Ganadero", b =>
                {
                    b.HasBaseType("Ganaderia.App.Dominio.Persona");

                    b.Property<string>("Ciudad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VeterinarioId")
                        .HasColumnType("int");

                    b.HasIndex("VeterinarioId");

                    b.HasDiscriminator().HasValue("Ganadero");
                });

            modelBuilder.Entity("Ganaderia.App.Dominio.Veterinario", b =>
                {
                    b.HasBaseType("Ganaderia.App.Dominio.Persona");

                    b.Property<string>("TarjetaProfesional")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Veterinario");
                });

            modelBuilder.Entity("Ganaderia.App.Dominio.Ejemplar", b =>
                {
                    b.HasOne("Ganaderia.App.Dominio.Ganadero", null)
                        .WithMany("Ganado")
                        .HasForeignKey("GanaderoId");

                    b.HasOne("Ganaderia.App.Dominio.HistoriaClinica", "HistoriaClinica")
                        .WithMany()
                        .HasForeignKey("HistoriaClinicaId");

                    b.Navigation("HistoriaClinica");
                });

            modelBuilder.Entity("Ganaderia.App.Dominio.Vacuna", b =>
                {
                    b.HasOne("Ganaderia.App.Dominio.Ejemplar", null)
                        .WithMany("ListaVacunas")
                        .HasForeignKey("EjemplarId");

                    b.HasOne("Ganaderia.App.Dominio.Fecha", "Fecha")
                        .WithMany()
                        .HasForeignKey("FechaId");

                    b.Navigation("Fecha");
                });

            modelBuilder.Entity("Ganaderia.App.Dominio.HistoriaClinica", b =>
                {
                    b.HasOne("Ganaderia.App.Dominio.Fecha", "Fecha")
                        .WithMany()
                        .HasForeignKey("FechaId");

                    b.Navigation("Fecha");
                });

            modelBuilder.Entity("Ganaderia.App.Dominio.Ganadero", b =>
                {
                    b.HasOne("Ganaderia.App.Dominio.Veterinario", "Veterinario")
                        .WithMany()
                        .HasForeignKey("VeterinarioId");

                    b.Navigation("Veterinario");
                });

            modelBuilder.Entity("Ganaderia.App.Dominio.Ejemplar", b =>
                {
                    b.Navigation("ListaVacunas");
                });

            modelBuilder.Entity("Ganaderia.App.Dominio.Ganadero", b =>
                {
                    b.Navigation("Ganado");
                });
#pragma warning restore 612, 618
        }
    }
}
